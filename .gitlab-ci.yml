stages:
  - build-image
  - update-tag-dev
  - update-tag-prod

variables:
  IMAGE_NAME: "django/app"

build-image:
  image: docker:20.10.16
  stage: build-image
  services:
    - docker:20.10.16-dind
  variables:
    DOCKER_HOST: "tcp://localhost:2375"
    IMAGE_FULL: $HARBOR_REGISTRY/$IMAGE_NAME:$CI_COMMIT_SHORT_SHA
  before_script:
    - update-ca-certificates
    - if [[ $CI_COMMIT_TAG != '' ]]; then export IMAGE_FULL=$HARBOR_REGISTRY/$IMAGE_NAME:$CI_COMMIT_TAG; fi;
  script:
    - docker login -u $HARBOR_REGISTRY_USERNAME -p $HARBOR_REGISTRY_PASSWORD $HARBOR_REGISTRY
    - docker build -t $IMAGE_FULL .
    - docker push $IMAGE_FULL
  only:
    - main
    - tags

deploy-dev:
  image: 
    name : alpine/git
    entrypoint : [""]
  stage: update-tag-dev
  before_script:
    - git config --global user.name "Gitlab Btech CI/CD"
    - git config --global user.email "gitlab@gitlab.btech-sd.id"
    - git config --global http.sslVerify false
  script: 
    - echo "Updating Deployment Repository with tag $CI_COMMIT_SHORT_SHA"
    - git clone $DEPLOYMENT_REPOSITORY manifest
    - cd manifest/environments
    - |
      tag=$(cat values-dev.yaml | grep -m 1 tag: | awk '{print $2}')
    - |
      version=$(cat values-dev.yaml | grep -m 1 version: | awk '{print $2}')
    - sed -i "s/$tag/$CI_COMMIT_SHORT_SHA/g" values-dev.yaml
    - sed -i "s/$version/$CI_COMMIT_TIMESTAMP/g" values-dev.yaml
    - git commit -am "Update Deployment Image Version to version $CI_COMMIT_SHORT_TAG" && git push origin main
  only:
    - main

deploy-prod:
  image: 
    name : alpine/git
    entrypoint : [""]
  stage: update-tag-prod
  before_script:
    - git config --global user.name "Gitlab Btech CI/CD"
    - git config --global user.email "gitlab@gitlab.btech-sd.id"
    - git config --global http.sslVerify false
  script: 
    - echo "Updating Production Repository with tag $CI_COMMIT_TAG"
    - git clone $DEPLOYMENT_REPOSITORY manifest
    - cd manifest/environments
    - |
      tag=$(cat values-prod.yaml | grep -m 1 tag: | awk '{print $2}')
    - |
      version=$(cat values-prod.yaml | grep -m 1 version: | awk '{print $2}')
    - sed -i "s/$tag/$CI_COMMIT_TAG/g" values-prod.yaml
    - sed -i "s/$version/$CI_COMMIT_TAG/g" values-prod.yaml
    - git commit -am "Update Production Image Version to version $CI_COMMIT_TAG" && git push origin main
  only:
    - tags